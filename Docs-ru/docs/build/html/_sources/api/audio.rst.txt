Аудио
*******

.. py:module:: audio

Этот модуль позволяет воспроизводить собственные звуки. Если вы используете micro:bit
**V2**.

По умолчанию вывод звука подключено к контакту 0
:doc:`built-in speaker <speaker>` **V2**. Вы можете подключить проводные наушники или
динамик к контакту 0 и GND, чтобы слышать звуки.

Функции
=========

.. py:function:: play(source, wait=True, pin=pin0, return_pin=None)

    Проиграть звук.

    * **source**: ``Sound`` - The ``microbit`` модуль содержит список
      встроенных звуков, которые вы можете передать в функцию ``audio.play()``.

    * **source**: ``AudioFrame`` - TИсходный аргумент также может быть итерируемым
      элементов. Подробнее в модуле ``AudioFrame``.

    * **wait**: Если  ``wait`` присвоено ``True``, microbit будет заблокирован до конца проигрывания звука.

    * **pin**: Необязательный аргумент для указания другого выходного контакта, Вы можете поменять
      значение (по умолчанию ``pin0``). 

    * **return_pin**: задает контакт вместо земли. Это игнорируется для версии **V2**.

.. py:function:: is_playing()

    Возвращает ``True`` если звук воспроизводится, иначе возврат ``False``.

.. py:function:: stop()
    
    Останавливает воспроизведение звука.

Класс
=======

.. py:class::
    AudioFrame

    An ``AudioFrame`` объект представляет собой список из 32 мелодий.

    Воспроизведение одного кадра занимает чуть более 4 мс.

Использование аудио
===================

Вам понадобится источник звука, для функции ``play``. Вы можете использовать
встроенные звуки **V2** из модуля ``microbit``, ``microbit.Sound``, создать
свой собственный, как в ``examples/waveforms.py``.

Встроенные звуки **V2**
-----------------------

Встроенные звуки можно вызвать с помощью ``audio.play(Sound.NAME)``.

* ``Sound.GIGGLE``
* ``Sound.HAPPY``
* ``Sound.HELLO``
* ``Sound.MYSTERIOUS``
* ``Sound.SAD``
* ``Sound.SLIDE``
* ``Sound.SOARING``
* ``Sound.SPRING``
* ``Sound.TWINKLE``
* ``Sound.YAWN``